/******************************************************************************************************************************************/
// (c) 2009 - 2019 Jay Graham
//
// Distributed under the MIT License
// (see accompanying file LICENSE_1_0_0.txt or http://www.opensource.org/licenses/mit-license.php)
/******************************************************************************************************************************************/

#ifndef PROTOX_BINARY_UTIL_HPP
#define PROTOX_BINARY_UTIL_HPP

/******************************************************************************************************************************************/

#include <boost/dynamic_bitset.hpp>

/******************************************************************************************************************************************/

namespace protox {
namespace binary {

/******************************************************************************************************************************************/

struct util {
	static inline boost::dynamic_bitset<> reverse(const size_t num_bits, const unsigned char value) {
		const boost::dynamic_bitset<> original(num_bits, value);

		boost::dynamic_bitset<> result;

		for (int i = (original.size() - 1); i >= 0; --i) {
			result.push_back(original[i]);
		}

		return result;
	}
};

/******************************************************************************************************************************************/

}
}

/******************************************************************************************************************************************/

#endif

/******************************************************************************************************************************************/
